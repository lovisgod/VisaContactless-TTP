plugins {
//    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'com.android.library'
}


def apikeyPropertiesFile = rootProject.file("api_key.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    namespace 'com.lovisgod.testVisaTTP'
    compileSdk 33

    defaultConfig {
//        applicationId "com.lovisgod.testVisaTTP"
        minSdk 29
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "API_KEY", apikeyProperties['API_KEY'])
        buildConfigField("String", "MERCHANT_ID", apikeyProperties['MERCHANT_ID'])
        buildConfigField("String", "SENTRY_DSN", apikeyProperties['SENTRY_DSN'])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("boolean", "MOCK", "false")
        }

        debug {
            buildConfigField("boolean", "MOCK", "false") // mock device
            // add this for kozen
            // remove this when not building for kozen
//            signingConfig signingConfigs.kozenConfig
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        buildConfig = true
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    def retrofit_version = '2.5.0'

    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.pixplicity.easyprefs:EasyPrefs:1.10.0'
    implementation project(':visattpsdk_aar')
    api "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.10"

    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"

    // retrofit

    // retrofit http library
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"

    implementation("com.squareup.retrofit2:converter-simplexml:$retrofit_version") {
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
    }

    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    // retrofit gson converter
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation 'com.github.devicesandtokens:ISW_EMV_UTIL_LIB:0.1'
    implementation 'com.scottyab:rootbeer-lib:0.1.0'
}